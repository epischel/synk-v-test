ext {
    // Java(x)-API versions
    javaxServletApiVerion = "4.0.1"
    javaxServletJspApiVersion = "2.2"
    javaxServletJspJstlApiVersion = "1.2.6"
    javaxValidationApiVersion = "2.0.1.Final"

    // database driver version
    oracleJdbcDriverVersion = "12.2.0.1.0"

    // logger versions
    slf4jVersion = "2.0.6"
    log4jVersion = "2.17.1"

    // Spring- und Spring-Deps versions
    springBootVersion = "2.6.3"
    springVersion = "5.3.19"
    springSecurityVersion = "5.7.3"
    springVersion = "5.3.15"
    springSecurityVersion = "5.6.0"
    springSecurityKerberosVersion = "1.0.1.RELEASE"
    aspectjVersion = "1.9.9.1"

    apachePoiVersion = "4.1.2"
    httpcomponentsVersion = "4.5.13"
    commonsLang3Version = "3.12.0"
    commonsIoVersion = "2.11.0"
    jsr305Version = "3.0.2"
    guavaVersion = "31.1-jre"
    jacksonVersion = "2.13.4"
    commonsCollections4Version = "4.4"
    //commons-beanutils: ab 1.9.3 fliegt eine exception, wenn man versuch null in einen primitive zu kopieren -> vorerst bleiben wir bei 1.7
    commonsBeanutilsVersion = "1.7.0"
    commonsTextVersion = "1.9"
    icu4jVersion = "71.1"
    apacheFopVersion = "2.7"
    externJaxbTestVersion = "1.0.0"
    xalanVersion = "2.7.2"
    iTextVersion = "5.1.0" // mit 5.5.12 fehlen die barcodes, deshalb weiter mit 5.1.0
    jamonVersion = "2.7"
    // Caffeine-Versionen mit Major-Version 3 erfordern Java 11.
    caffeineCacheVersion = "2.8.4"
    axisVersion = "1.4"
    reflectionsVersion = "0.10.2"

    // test deps versions
    hamcrestVersion = "2.2"
    xmlunitVersion = "2.9.0"
    junitVersion = "4.13.2"
    assertjVersion = "3.23.1"
    mockitoVersion = "2.8.9"
    jaxwsToolsVersion = "2.3.2"
    commonsCsvVersion = "1.9.0"
    snakeyamlVersion = "1.31"
    javafakerVersion = "1.0.2"
    wiremockVersion = "2.34.0"

	
}

buildscript {

    dependencies {
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3")
        classpath("com.diffplug.spotless:spotless-plugin-gradle:5.17.1")
        classpath("com.github.ben-manes:gradle-versions-plugin:0.36.0")
	classpath("se.patrikerdes:gradle-use-latest-versions-plugin:0.2.15")
    }
} 


dependencies {
            // Java(x)-API deps
            compileOnly "javax.servlet:javax.servlet-api:${javaxServletApiVerion}"
            compileOnly "javax.servlet.jsp:jsp-api:${javaxServletJspApiVersion}"
            implementation "org.glassfish.web:jakarta.servlet.jsp.jstl:${javaxServletJspJstlApiVersion}"
            testImplementation "javax.servlet:javax.servlet-api:${javaxServletApiVerion}"
            testImplementation "javax.servlet.jsp:jsp-api:${javaxServletJspApiVersion}"
            implementation "javax.validation:validation-api:${javaxValidationApiVersion}"

            // database driver
            implementation "oracle:ojdbc8:${oracleJdbcDriverVersion}"

            // logger dependencies
            implementation "org.slf4j:slf4j-api:${slf4jVersion}"

            // Spring-Dependencies
            implementation "org.springframework:spring-aop:${springVersion}"
            implementation "org.springframework:spring-beans:${springVersion}"
            implementation "org.springframework:spring-context-support:${springVersion}"
            implementation "org.springframework:spring-core:${springVersion}"
            implementation "org.springframework:spring-jcl:${springVersion}"
            implementation "org.springframework:spring-jdbc:${springVersion}"
            implementation "org.springframework:spring-tx:${springVersion}"
            implementation "org.springframework:spring-expression:${springVersion}"
            implementation "org.springframework:spring-webmvc:${springVersion}"
            implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
            implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
            implementation "org.springframework.security:spring-security-ldap:$springSecurityVersion"
            implementation "org.springframework.security.kerberos:spring-security-kerberos-core:${springSecurityKerberosVersion}"
            implementation "org.springframework.security.kerberos:spring-security-kerberos-client:${springSecurityKerberosVersion}"
            implementation "org.springframework.security.kerberos:spring-security-kerberos-web:${springSecurityKerberosVersion}"
            implementation "org.aspectj:aspectjrt:${aspectjVersion}"
            implementation "org.aspectj:aspectjtools:${aspectjVersion}"

            // allgemeine 3rd-Party-Libraries
            implementation "com.google.code.findbugs:jsr305:${jsr305Version}"
            implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
            implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"
            implementation "commons-io:commons-io:${commonsIoVersion}"
            implementation "com.google.code.maven-play-plugin.com.jamonapi:jamon:${jamonVersion}"

            // allgemeine Test Bibliotheken
            testImplementation "org.springframework:spring-test:${springVersion}"
            testImplementation "org.springframework.security.kerberos:spring-security-kerberos-test:${springSecurityKerberosVersion}"
            testImplementation "junit:junit:${junitVersion}"
            testImplementation "org.assertj:assertj-core:${assertjVersion}"
            testImplementation "org.mockito:mockito-core:${mockitoVersion}"
            testImplementation "org.hamcrest:hamcrest-core:${hamcrestVersion}"
            testImplementation "org.hamcrest:hamcrest-library:${hamcrestVersion}"
            testImplementation "org.xmlunit:xmlunit-core:${xmlunitVersion}"
            testImplementation "org.xmlunit:xmlunit-matchers:${xmlunitVersion}"
            testImplementation "org.xmlunit:xmlunit-legacy:${xmlunitVersion}"
            testRuntimeOnly "com.sun.xml.ws:jaxws-tools:${jaxwsToolsVersion}"
            testImplementation "org.apache.commons:commons-csv:${commonsCsvVersion}"
            testImplementation "org.yaml:snakeyaml:${snakeyamlVersion}"
            testImplementation("com.github.javafaker:javafaker:${javafakerVersion}") {
                exclude group: 'org.yaml', module: 'snakeyaml'
            }
            testImplementation("com.github.tomakehurst:wiremock-jre8:${wiremockVersion}")

 	    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
	    runtime 'org.slf4j:log4j-over-slf4j:2.0.6'
 
    compile 'commons-validator:commons-validator:1.1.3'
    compile ('oro:oro:2.0.8')
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.26'
    compile 'com.sun.mail:javax.mail:1.6.2' // 1.5.1
    compile 'org.cups4j:cups4j:0.7.9';
    compile 'org.reflections:reflections:${reflectionsVersion}'
    compile 'org.apache.commons:commons-text:${commonsTextVersion}'
    implementation "org.apache.httpcomponents:httpclient:${httpcomponentsVersion}"
    implementation "org.apache.httpcomponents:httpmime:${httpcomponentsVersion}"
    compile 'commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}' // 1.6
    compile 'commons-net:commons-net:3.8.0'
    compile 'com.google.guava:guava:${guavaVersion}'
    compile 'xalan:xalan:${xalanVersion}'
    compile 'xml-apis:xml-apis:2.0.2'
    compile 'commons-digester:commons-digester:2.1'
    compile 'net.sf.saxon:Saxon-HE:11.3'
    compile "org.apache.poi:poi:$apachePoiVersion"
    compile ("org.apache.poi:poi-ooxml:$apachePoiVersion")
    compile ('org.apache.xmlgraphics:fop:${apacheFopVersion}')
    compile ('org.apache.pdfbox:fontbox:2.0.26')
    compile ('com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}')
    compile 'com.ibm.icu:icu4j:${icu4jVersion}'
    compile 'commons-io:commons-io:${commonsIoVersion}'
    implementation "com.github.ben-manes.caffeine:caffeine:${caffeineCacheVersion}"
    
    compile 'commons-lang:commons-lang:2.6'
    compile ('axis:axis:1.4')
    compile 'org.apache.httpcomponents:httpclient-cache:4.5.13' 
    compile ('struts:struts:1.2.4')
    compile 'commons-fileupload:commons-fileupload:1.4'
    compile 'org.apache.commons:commons-csv:1.9.0'
    compile 'org.apache.commons:commons-text:${commonsTextVersion}'
    compile 'org.springframework.ws:spring-ws-core:3.1.3'
    compile 'org.springframework.ws:spring-xml:3.1.3'
    compile 'org.apache.ws.xmlschema:xmlschema-core:2.3.0'
    implementation "org.webjars:d3js:6.7.0"
    testCompile 'com.icegreen:greenmail:1.6.10';        
    testCompile 'javax.el:javax.el-api:3.0.0'

    implementation group: 'fr.opensagres.xdocreport', name:'fr.opensagres.xdocreport.document.odt', version:'2.0.3'
    implementation group: 'fr.opensagres.xdocreport', name:'fr.opensagres.xdocreport.template.freemarker', version:'2.0.3'
    implementation group: 'fr.opensagres.xdocreport', name:'fr.opensagres.xdocreport.converter.odt.odfdom', version:'2.0.3'
    implementation 'de.jollyday:jollyday:0.5.10'
    
      runtimeOnly "com.sun.xml.bind:jaxb-core:2.3.0.1"
  runtimeOnly "com.sun.xml.bind:jaxb-impl:4.0.2"
  runtimeOnly "org.apache.tomcat.embed:tomcat-embed-jasper"


}

configurations {
    asciidoc
    implementation.exclude group: "org.slf4j", module: "slf4j-log4j12"
    implementation.exclude group: "log4j", module: "log4j"
    testImplementation.exclude group: "org.slf4j", module: "slf4j-log4j12"
    testImplementation.exclude group: "log4j", module: "log4j"

}

dependencies {
    asciidoc 'org.asciidoctor:asciidoctorj:2.5.6'
    asciidoc 'org.asciidoctor:asciidoctor-ant:1.6.2'
    asciidoc 'org.asciidoctor:asciidoctorj-diagram:2.0.5'
    asciidoc 'org.asciidoctor:asciidoctorj-pdf:1.5.4'
    asciidoc 'net.sourceforge.plantuml:plantuml:1.2020.6'
}

